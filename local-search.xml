<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2023/12/09/hello-world/"/>
    <url>/2023/12/09/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>从零搭建个人博客-Hexo+Github</title>
    <link href="/2023/04/02/%E4%BB%8E%E9%9B%B6%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2-Hexo-Github/%E4%BB%8E%E9%9B%B6%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2-Hexo-Github/"/>
    <url>/2023/04/02/%E4%BB%8E%E9%9B%B6%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2-Hexo-Github/%E4%BB%8E%E9%9B%B6%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2-Hexo-Github/</url>
    
    <content type="html"><![CDATA[<h1 id="从零搭建个人博客-Hexo-Github"><a href="#从零搭建个人博客-Hexo-Github" class="headerlink" title="从零搭建个人博客-Hexo+Github"></a>从零搭建个人博客-Hexo+Github</h1><p>这是本博客站的第一篇博客，毫无疑问，将本次建站的完整过程记录下来，作为第一篇博客实在是非常有意义。</p><h2 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h2><p>在自己建站之前，我在CSDN上已经有相当大规模的浏览量了。但是，考虑到</p><ol><li>写作自由</li><li>流量变现</li><li>学习新技术</li></ol><p>这三种因素，因此决定自己搭建个人博客站。</p><p>在这个过程当中，我学了相当多的技术，探索了很多中建站方案，无论是wordpress，还是个人手动造轮子等。</p><p><strong>但综合来看，还是觉得hexo+Github的方式最合适初次建站。</strong></p><p>原因如下：</p><ol><li><strong>廉价</strong></li></ol><p>一般的服务器，最便宜的海外服务器，一般都是要<code>50美元/年</code>起步的价格。这对很多初学者来说，都应该是一笔算得上是不低的开销。<br>但是从目前这个方案来做的话，因为服务端是放在了Github上，所以实际上是不需要花费任何钱的。</p><ol start="2"><li><strong>效率</strong></li></ol><p>相比于，其他诸如wordpress来说，很多人说着已经有很多预设好的方案，什么一键建站来着，但是实际上，背后引入了太多技术，导致了有相当多的内容需要管理了。而，很多时候，其实就是想要很简单的– <strong>博客好看+方便写</strong>。至于说是像什么数据库管理，降低内存压力，提高超大规模访问容量上限等，这些我觉得对初次建站来说都是意义不大的。</p><ol start="3"><li><strong>简洁</strong></li></ol><p>由于hexo是非常轻量级的框架，虽然对于很多人来说，失去了繁杂的功能，但是我还是比较喜欢简洁化的页面。看着清新简洁的画面，实在是有一种莫名的舒适感。</p><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>说是从零开始，但是当我真的开始写这篇博客的时候，我也是发现其实还是有一些东西需要考虑的。</p><p><strong>需要准备好的内容:</strong></p><p>根据下面链接，应该基本上都能完成配置。</p><ol><li>准备一个Github账户，<a href="https://github.com/">https://github.com/</a> Sign up即可</li><li>需要配置好环境，确保在命令行下能用即可</li><li>Git<br>* <a href="https://git-scm.com/downloads">https://git-scm.com/downloads</a><br>* <a href="https://www.cnblogs.com/xueweisuoyong/p/11914045.html">https://www.cnblogs.com/xueweisuoyong/p/11914045.html</a></li><li>nodejs<br>* <a href="https://nodejs.org/en/download">https://nodejs.org/en/download</a><br>* <a href="https://www.runoob.com/nodejs/nodejs-install-setup.html">https://www.runoob.com/nodejs/nodejs-install-setup.html</a></li><li>生成本地的ssh-key，上传到个人Github的setting上</li></ol><ul><li><a href="https://blog.csdn.net/a19990412/article/details/127839737">https://blog.csdn.net/a19990412/article/details/127839737</a></li></ul><h2 id="创建一个的github-io的仓库"><a href="#创建一个的github-io的仓库" class="headerlink" title="创建一个的github.io的仓库"></a>创建一个的github.io的仓库</h2><ul><li>在Github上，创建一个名为<code>&lt;用户名&gt;.github.io</code>的仓库。<ul><li>这里的<code>&lt;用户名&gt;</code>为你Github账户的名字</li><li>全部大写改成小写</li><li>比如，我的Github名字是SeanQuant，这里我创建的仓库名字的就是<code>seanquant.github.io</code></li><li>设置为<code>Public</code></li></ul></li><li>这里的你的网站其实已经搭建好了，只不过里面的东西是空的而已。之后我们就是通过hexo的生成出来完整的网站数据最后，再部署在github上。</li></ul><h2 id="下载hexo"><a href="#下载hexo" class="headerlink" title="下载hexo"></a>下载hexo</h2><p>下面操作基本都在命令行下进行，但需要注意的是，windows推荐使用git的命令行，而不是默认的powershell，或者是cmd<br>不然可能会报错。</p><ul><li>将上述的repo clone下来，然后进入该目录</li><li>进入这个目录，然后<code>npm i hexo-cli -g</code></li></ul><p>这样就完成了，检查是否完成，可以输入下下命令的命令，看下输出</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">hexo -v<br></code></pre></td></tr></table></figure><ul><li>如果输出是类似于下面这样就可以了</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs bash">Sean@LAPTOP-F4VS0BRC MINGW64 /e/workspace/seanquant.github.io (master)<br>$ hexo -v<br>INFO  Validating config<br>hexo: 6.3.0<br>hexo-cli: 4.3.0<br>os: win32 10.0.22621<br>node: 18.15.0<br>v8: 10.2.154.26-node.25<br>uv: 1.44.2<br>zlib: 1.2.13<br>brotli: 1.0.9<br>ares: 1.18.1<br>modules: 108<br>nghttp2: 1.51.0<br>napi: 8<br>llhttp: 6.0.10<br>uvwasi: 0.0.15<br>acorn: 8.8.2<br>simdutf: 3.1.0<br>undici: 5.20.0<br>openssl: 3.0.8+quic<br>cldr: 42.0<br>icu: 72.1<br>tz: 2022g<br>unicode: 15.0<br>ngtcp2: 0.8.1<br>nghttp3: 0.7.0<br></code></pre></td></tr></table></figure><ul><li>初始化网站</li></ul><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs csharp">hexo <span class="hljs-keyword">init</span><br></code></pre></td></tr></table></figure><ul><li>安装必要组件</li></ul><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">npm <span class="hljs-keyword">install</span><br></code></pre></td></tr></table></figure><ul><li>生成静态页面</li></ul><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">hexo g</span><br></code></pre></td></tr></table></figure><ul><li>打开本地服务</li></ul><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">hexo s</span><br></code></pre></td></tr></table></figure><ul><li>之后应该会输出一个链接，访问就可以了。一般来说是<a href="http://localhost:4000/">http://localhost:4000/</a></li></ul><p>这样就算是完成了最基本的事情了。</p><h2 id="写新文章"><a href="#写新文章" class="headerlink" title="写新文章"></a>写新文章</h2><ul><li>如果想创建一个新文章，需要用到hexo new命令，也可以用hexo n缩写</li></ul><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs excel">hexo <span class="hljs-built_in">n</span> <span class="hljs-string">&quot;你的文章标题&quot;</span><br></code></pre></td></tr></table></figure><ul><li>文章就会出现在当前目录下的<code>./source/_post/xxx.md</code></li><li>当然也可以创建一个对应的文件夹，然后把这个md文件放在里面</li></ul><blockquote><p>更多也可以看这里 <a href="https://oakland.github.io/2016/05/02/hexo-%E5%A6%82%E4%BD%95%E7%94%9F%E6%88%90%E4%B8%80%E7%AF%87%E6%96%B0%E7%9A%84post/">https://oakland.github.io/2016/05/02/hexo-%E5%A6%82%E4%BD%95%E7%94%9F%E6%88%90%E4%B8%80%E7%AF%87%E6%96%B0%E7%9A%84post/</a></p></blockquote><h2 id="push到github上"><a href="#push到github上" class="headerlink" title="push到github上"></a>push到github上</h2><ul><li>如果是在这个电脑上第一次使用git，需要配置一下，名字跟邮箱。否则，不需要</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">git config --global user.name <span class="hljs-string">&quot;your name&quot;</span><br>git config --global user.email <span class="hljs-string">&quot;your email&quot;</span><br></code></pre></td></tr></table></figure><ul><li><p>需要配置一下 <code>_config.yml</code>，这里放的是hexo的配置文件</p><ul><li>以后可能有变化但是关键的几个的东西是逃不掉的</li></ul><ol><li>改url<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">url:</span> <span class="hljs-string">https://seanquant.github.io/</span><br></code></pre></td></tr></table></figure></li><li>改deploy参数，这里大家都是类似。相应修改一下就行<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">deploy:</span><br>  <span class="hljs-attr">type:</span> <span class="hljs-string">&#x27;git&#x27;</span><br>  <span class="hljs-attr">repo:</span> <span class="hljs-string">https://github.com/SeanQuant/seanquant.github.io.git</span><br>  <span class="hljs-attr">branch:</span> <span class="hljs-string">master</span><br></code></pre></td></tr></table></figure></li></ol></li><li><p>push上就只需要(d &#x3D; deploy) 配置好以后，之后就只需要下面这个命令就可以提交了。会更加简单</p><ul><li>注意，提交前最好先生成<code>hexo g</code>，有时间还可以<code>hexo s</code>本地预览一下，养成好习惯</li></ul></li></ul><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">hexo d</span><br></code></pre></td></tr></table></figure><p>进行完这个操作之后，一般等个十几秒，就可以通过<code>seanquant.github.io</code>这个链接进行访问对应的博客了。</p><h2 id="多设备写文章"><a href="#多设备写文章" class="headerlink" title="多设备写文章"></a>多设备写文章</h2><p>为了实现多设备，其实很简单。就是将一些博文需要的数据，用一个新的分支进行管理</p><ol><li>如果本地文件夹下没有<code>.git</code>文件夹(可能会被隐藏)，就用<code>git init</code>将本地仓库初始化</li><li><code>git checkout -b hexo</code> 创建一个hexo分支</li><li>创建一个<code>.gitignore</code>文件，可以命令行创建<code>touch .gitnore</code>，也可以手动创建，里面数据是下面这样</li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">.DS_Store</span><br><span class="hljs-string">Thumbs.db</span><br><span class="hljs-string">db.json</span><br><span class="hljs-string">*.log</span><br><span class="hljs-string">node_modules/</span><br><span class="hljs-string">public/</span><br><span class="hljs-string">.deploy*/</span><br><span class="hljs-string">_multiconfig.yml</span><br></code></pre></td></tr></table></figure><ol start="4"><li>因为是有可能没有远端的的信息的因此需要添加origin</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git remote add origin git@github.com:SeanQuant/seanquant.github.io.git<br></code></pre></td></tr></table></figure><ol start="5"><li><p>提交<code>git push origin hexo</code></p></li><li><p>在github上将hexo分支设置为default分支</p></li></ol><ul><li>可以参考这个，就在setting里面 <a href="https://docs.github.com/zh/repositories/configuring-branches-and-merges-in-your-repository/managing-branches-in-your-repository/changing-the-default-branch">https://docs.github.com/zh/repositories/configuring-branches-and-merges-in-your-repository/managing-branches-in-your-repository/changing-the-default-branch</a></li><li>为啥要这么做呢？因为每次clone默认clone default分支，你要是选的是master里面每次都需要切换分支，就会很麻烦，不如一步到位</li></ul><p>完成这些之后，以后就可以在新设备上操作了。</p><h3 id="新机器操作"><a href="#新机器操作" class="headerlink" title="新机器操作"></a>新机器操作</h3><p>假如有一个新的设备，怎么开始继续创作呢？</p><p><strong>前提</strong> 同样是先保证有 git和node js，这里直接参照上面的教程安装</p><ol><li>git clone 下来，比如我是<code>git clone git@github.com:SeanQuant/seanquant.github.io.git</code></li><li>进入文件夹，然后<code>npm i hexo-cli -g</code> 完成配置</li><li>到这里就可以开始写了，之后还是<code>hexo d</code> 提交到github上。当然最基本的还是一样将这个目录给<code>git push origin hexo</code>这个分支上</li></ol><h2 id="For-others"><a href="#For-others" class="headerlink" title="For others"></a>For others</h2><p>相信到这里，灵活一点的哥们儿就会发现一个问题了。<br>如果你参考 <a href="#%E6%96%B0%E6%9C%BA%E5%99%A8%E6%93%8D%E4%BD%9C">新机器操作</a>, 直接将我的代码拷贝下来</p><ol><li>删除本地remote origin，改成指向你自己的github repo</li><li>然后再类似，配置git，nodejs。</li><li><code>npm i hexo-cli -g</code>下载依赖包</li><li>修改<code>_config.yml</code>中的配置信息改成你自己的</li><li>最后再生成、发布、提交到你自己的repo上，一条龙</li></ol><p>你就可以得到一个跟我这个博客站一模一样的翻版…</p><p>可以说是相当鬼才了，建议试试。</p>]]></content>
    
    
    <categories>
      
      <category>前端</category>
      
    </categories>
    
    
    <tags>
      
      <tag>前端</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
